{"version":3,"file":"static/js/901.d7738710.chunk.js","mappings":"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","sources":["components/Calories.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport db from \"../Firebase\";\n\nconst Calories = () => {\n  const { user, isAuthenticated } = useAuth0();\n\n  const [isSettingsLoaded, setIsSettingsLoaded] = useState(false);\n  const [unit, setUnit] = useState(\"lbs\");\n  const [heightUnit, setHeightUnit] = useState(\"cm\");\n\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"male\");\n  const [weightCalories, setWeightCalories] = useState(\"\");\n  const [heightFeet, setHeightFeet] = useState(\"\");\n  const [heightInches, setHeightInches] = useState(\"\");\n  const [heightCm, setHeightCm] = useState(\"\");\n  const [activityLevel, setActivityLevel] = useState(\"1.2\");\n  const [calories, setCalories] = useState(null);\n\n  const [weightBmi, setWeightBmi] = useState(\"\");\n  const [bmi, setBmi] = useState(null);\n  const [heightBmiFeet, setHeightBmiFeet] = useState(\"\");\n  const [heightBmiInches, setHeightBmiInches] = useState(\"\");\n  const [heightBmiCm, setHeightBmiCm] = useState(\"\");\n\n  useEffect(() => {\n    const loadSettings = async () => {\n      if (isAuthenticated && user) {\n        const docRef = doc(db, \"settings\", user.sub);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          setUnit(data.unit ?? \"lbs\");\n          setHeightUnit(data.heightUnit ?? \"cm\");\n        }\n      } else {\n        setUnit(\"lbs\");\n        setHeightUnit(\"ft-in\");\n      }\n      setIsSettingsLoaded(true);\n    };\n\n    loadSettings();\n  }, [isAuthenticated, user]);\n\n  const calculateCalories = () => {\n    if (!age || !weightCalories || (!heightFeet && !heightCm)) return;\n\n    const w = parseFloat(weightCalories);\n    const a = parseInt(age);\n\n    let heightInCm;\n    if (heightUnit === \"ft-in\" && heightFeet && heightInches) {\n      heightInCm =\n        parseInt(heightFeet) * 30.48 + parseInt(heightInches) * 2.54;\n    } else {\n      heightInCm = parseFloat(heightCm);\n    }\n\n    const weightKg = unit === \"kg\" ? w : w * 0.453592;\n\n    const bmr =\n      gender === \"male\"\n        ? 10 * weightKg + 6.25 * heightInCm - 5 * a + 5\n        : 10 * weightKg + 6.25 * heightInCm - 5 * a - 161;\n\n    const maintenance = bmr * parseFloat(activityLevel);\n    setCalories(Math.round(maintenance));\n  };\n\n  const calculateBMI = () => {\n    if (!weightBmi || (!heightBmiFeet && !heightBmiCm)) return;\n\n    const weightKg =\n      unit === \"kg\" ? parseFloat(weightBmi) : parseFloat(weightBmi) * 0.453592;\n\n    let heightInMeters;\n    if (heightUnit === \"ft-in\" && heightBmiFeet && heightBmiInches) {\n      heightInMeters =\n        parseInt(heightBmiFeet) * 0.3048 + parseInt(heightBmiInches) * 0.0254;\n    } else {\n      heightInMeters = parseFloat(heightBmiCm) / 100;\n    }\n\n    const bmiValue = weightKg / (heightInMeters * heightInMeters);\n    setBmi(bmiValue.toFixed(2));\n  };\n\n  const handleUnitChange = (newUnit, newHeightUnit) => {\n    setUnit(newUnit);\n    setHeightUnit(newHeightUnit);\n  };\n\n  const getBmiCategory = (bmi) => {\n    if (bmi < 18.5) return { category: \"Underweight\", color: \"bg-blue-200\" };\n    if (bmi < 24.9) return { category: \"Normal weight\", color: \"bg-green-200\" };\n    if (bmi < 29.9) return { category: \"Overweight\", color: \"bg-orange-200\" };\n    return { category: \"Obesity\", color: \"bg-red-200\" };\n  };\n\n  if (!isSettingsLoaded) {\n    return <div className=\"text-center text-teal-600\">Loading settings...</div>;\n  }\n\n  const { category, color } = bmi ? getBmiCategory(bmi) : { category: \"\", color: \"\" };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\n      {/* Calorie Calculator */}\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-xl p-8\">\n        <h2 className=\"text-3xl font-bold text-center text-teal-600 mb-6\">\n          Daily Calorie Needs\n        </h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Age\n            </label>\n            <input\n              type=\"number\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n              placeholder=\"Years\"\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Gender\n            </label>\n            <select\n              value={gender}\n              onChange={(e) => setGender(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Weight Unit\n            </label>\n            <select\n              value={unit}\n              onChange={(e) => handleUnitChange(e.target.value, heightUnit)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"lbs\">lbs</option>\n              <option value=\"kg\">kg</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Height Unit\n            </label>\n            <select\n              value={heightUnit}\n              onChange={(e) => handleUnitChange(unit, e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"ft-in\">ft</option>\n              <option value=\"cm\">cm</option>\n            </select>\n          </div>\n\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Weight ({unit})\n            </label>\n            <input\n              type=\"number\"\n              value={weightCalories}\n              onChange={(e) => setWeightCalories(e.target.value)}\n              placeholder={`e.g. ${unit === \"lbs\" ? \"154\" : \"70\"}`}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n\n          {heightUnit === \"ft-in\" ? (\n            <div className=\"md:col-span-2\">\n              <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n                Height (ft & in)\n              </label>\n              <div className=\"flex gap-4\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Feet\"\n                  value={heightFeet}\n                  onChange={(e) => setHeightFeet(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Inches\"\n                  value={heightInches}\n                  onChange={(e) => setHeightInches(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"md:col-span-2\">\n              <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n                Height (cm)\n              </label>\n              <input\n                type=\"number\"\n                placeholder=\"e.g. 175\"\n                value={heightCm}\n                onChange={(e) => setHeightCm(e.target.value)}\n                className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n              />\n            </div>\n          )}\n\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Activity Level\n            </label>\n            <select\n              value={activityLevel}\n              onChange={(e) => setActivityLevel(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"1.2\">0-1 days a week</option>\n              <option value=\"1.375\">1-3 days a week</option>\n              <option value=\"1.55\">3-5 days a week)</option>\n              <option value=\"1.725\">6-7 days a week)</option>\n              <option value=\"1.9\">Every day</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"text-center mt-4\">\n          <button\n            onClick={calculateCalories}\n            className=\"px-6 py-2 bg-teal-600 text-white rounded-md hover:bg-teal-700\"\n          >\n            Calculate Calories\n          </button>\n        </div>\n\n        {calories && (\n          <div className=\"mt-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-teal-600\">\n              Your Daily Calorie Needs: {calories} kcal\n            </h3>\n          </div>\n        )}\n      </div>\n\n      {/* BMI Calculator */}\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-xl p-8\">\n        <h2 className=\"text-3xl font-bold text-center text-teal-600 mb-6\">\n          Body Mass Index (BMI)\n        </h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Weight ({unit})\n            </label>\n            <input\n              type=\"number\"\n              value={weightBmi}\n              onChange={(e) => setWeightBmi(e.target.value)}\n              placeholder={`e.g. ${unit === \"lbs\" ? \"154\" : \"70\"}`}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n\n          {heightUnit === \"ft-in\" ? (\n            <div>\n              <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n                Height (ft & in)\n              </label>\n              <div className=\"flex gap-4\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Feet\"\n                  value={heightBmiFeet}\n                  onChange={(e) => setHeightBmiFeet(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Inches\"\n                  value={heightBmiInches}\n                  onChange={(e) => setHeightBmiInches(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div>\n              <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n                Height (cm)\n              </label>\n              <input\n                type=\"number\"\n                placeholder=\"e.g. 175\"\n                value={heightBmiCm}\n                onChange={(e) => setHeightBmiCm(e.target.value)}\n                className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n              />\n            </div>\n          )}\n        </div>\n\n        <div className=\"text-center mt-4\">\n          <button\n            onClick={calculateBMI}\n            className=\"px-6 py-2 bg-teal-600 text-white rounded-md hover:bg-teal-700\"\n          >\n            Calculate BMI\n          </button>\n        </div>\n\n        {bmi && (\n          <div className=\"mt-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-teal-600\">Your BMI: {bmi}</h3>\n            <div className={`${color} p-2 rounded-md mt-2`}>\n              <p className=\"text-center font-medium\">{category}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Calories;\n"],"names":["Calories","user","isAuthenticated","useAuth0","isSettingsLoaded","setIsSettingsLoaded","useState","unit","setUnit","heightUnit","setHeightUnit","age","setAge","gender","setGender","weightCalories","setWeightCalories","heightFeet","setHeightFeet","heightInches","setHeightInches","heightCm","setHeightCm","activityLevel","setActivityLevel","calories","setCalories","weightBmi","setWeightBmi","bmi","setBmi","heightBmiFeet","setHeightBmiFeet","heightBmiInches","setHeightBmiInches","heightBmiCm","setHeightBmiCm","useEffect","async","docRef","doc","db","sub","docSnap","getDoc","exists","_data$unit","_data$heightUnit","data","loadSettings","handleUnitChange","newUnit","newHeightUnit","_jsx","className","children","category","color","getBmiCategory","_jsxs","type","value","onChange","e","target","placeholder","onClick","calculateCalories","w","parseFloat","a","parseInt","heightInCm","weightKg","maintenance","Math","round","calculateBMI","heightInMeters","toFixed"],"sourceRoot":""}