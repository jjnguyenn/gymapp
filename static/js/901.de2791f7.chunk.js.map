{"version":3,"file":"static/js/901.de2791f7.chunk.js","mappings":"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","sources":["components/Calories.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport db from \"../Firebase\";\n\nconst Calories = () => {\n  const { user, isAuthenticated } = useAuth0();\n\n  const [isSettingsLoaded, setIsSettingsLoaded] = useState(false);\n  const [unit, setUnit] = useState(\"lbs\");\n  const [heightUnit, setHeightUnit] = useState(\"cm\");\n\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"male\");\n  const [weightCalories, setWeightCalories] = useState(\"\");\n  const [heightFeet, setHeightFeet] = useState(\"\");\n  const [heightInches, setHeightInches] = useState(\"\");\n  const [heightCm, setHeightCm] = useState(\"\");\n  const [activityLevel, setActivityLevel] = useState(\"1.2\");\n  const [calories, setCalories] = useState(null);\n\n  const [weightBmi, setWeightBmi] = useState(\"\");\n  const [bmi, setBmi] = useState(null);\n  const [heightBmiFeet, setHeightBmiFeet] = useState(\"\");\n  const [heightBmiInches, setHeightBmiInches] = useState(\"\");\n  const [heightBmiCm, setHeightBmiCm] = useState(\"\");\n\n  useEffect(() => {\n    const loadSettings = async () => {\n      if (isAuthenticated && user) {\n        const docRef = doc(db, \"settings\", user.sub);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          setUnit(data.unit ?? \"lbs\");\n          setHeightUnit(data.heightUnit ?? \"cm\");\n        }\n      } else {\n        const savedUnit = localStorage.getItem(\"unit\");\n        const savedHeightUnit = localStorage.getItem(\"heightUnit\");\n        setUnit(savedUnit || \"lbs\");\n        setHeightUnit(savedHeightUnit || \"cm\");\n      }\n      setIsSettingsLoaded(true);\n    };\n\n    loadSettings();\n  }, [isAuthenticated, user]);\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      localStorage.setItem(\"unit\", unit);\n      localStorage.setItem(\"heightUnit\", heightUnit);\n    }\n  }, [unit, heightUnit, isAuthenticated]);\n\n  const calculateCalories = () => {\n    if (!age || !weightCalories || (!heightFeet && !heightCm)) return;\n\n    const w = parseFloat(weightCalories);\n    const a = parseInt(age);\n\n    let heightInCm;\n    if (heightUnit === \"ft-in\" && heightFeet && heightInches) {\n      heightInCm =\n        parseInt(heightFeet) * 30.48 + parseInt(heightInches) * 2.54;\n    } else {\n      heightInCm = parseFloat(heightCm);\n    }\n\n    const weightKg = unit === \"kg\" ? w : w * 0.453592;\n\n    const bmr =\n      gender === \"male\"\n        ? 10 * weightKg + 6.25 * heightInCm - 5 * a + 5\n        : 10 * weightKg + 6.25 * heightInCm - 5 * a - 161;\n\n    const maintenance = bmr * parseFloat(activityLevel);\n    setCalories(Math.round(maintenance));\n  };\n\n  const calculateBMI = () => {\n    if (!weightBmi || (!heightBmiFeet && !heightBmiCm)) return;\n\n    const weightKg = unit === \"kg\" ? parseFloat(weightBmi) : parseFloat(weightBmi) * 0.453592;\n\n    let heightInMeters;\n    if (heightUnit === \"ft-in\" && heightBmiFeet && heightBmiInches) {\n      heightInMeters =\n        parseInt(heightBmiFeet) * 0.3048 + parseInt(heightBmiInches) * 0.0254;\n    } else {\n      heightInMeters = parseFloat(heightBmiCm) / 100;\n    }\n\n    const bmiValue = weightKg / (heightInMeters * heightInMeters);\n    setBmi(bmiValue.toFixed(2));\n  };\n\n  if (!isSettingsLoaded) {\n    return <div className=\"text-center text-teal-600\">Loading settings...</div>;\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-xl p-8\">\n        <h2 className=\"text-3xl font-bold text-center text-teal-600 mb-6\">\n          Daily Calorie Needs\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block font-medium text-teal-700 mb-1\">Age</label>\n            <input\n              type=\"number\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n              placeholder=\"Years\"\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n          <div>\n            <label className=\"block font-medium text-teal-700 mb-1\">Gender</label>\n            <select\n              value={gender}\n              onChange={(e) => setGender(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block font-medium text-teal-700 mb-1\">Weight ({unit})</label>\n            <input\n              type=\"number\"\n              value={weightCalories}\n              onChange={(e) => setWeightCalories(e.target.value)}\n              placeholder={`e.g. ${unit === \"lbs\" ? \"154\" : \"70\"}`}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n          {heightUnit === \"ft-in\" ? (\n            <div>\n              <label className=\"block font-medium text-teal-700 mb-1\">Height (ft & in)</label>\n              <div className=\"flex space-x-4\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Feet\"\n                  value={heightFeet}\n                  onChange={(e) => setHeightFeet(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Inches\"\n                  value={heightInches}\n                  onChange={(e) => setHeightInches(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div>\n              <label className=\"block font-medium text-teal-700 mb-1\">Height (cm)</label>\n              <input\n                type=\"number\"\n                placeholder=\"e.g. 175\"\n                value={heightCm}\n                onChange={(e) => setHeightCm(e.target.value)}\n                className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n              />\n            </div>\n          )}\n          <div className=\"md:col-span-2\">\n            <label className=\"block font-medium text-teal-700 mb-1\">Activity Level</label>\n            <select\n              value={activityLevel}\n              onChange={(e) => setActivityLevel(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"1.2\">0-1 days a week</option>\n              <option value=\"1.375\">1-3 days a week</option>\n              <option value=\"1.55\">3-5 days a week</option>\n              <option value=\"1.725\">6-7 days a week</option>\n              <option value=\"1.9\">Every day</option>\n            </select>\n          </div>\n        </div>\n        <button\n          onClick={calculateCalories}\n          className=\"w-full mt-6 bg-teal-600 hover:bg-teal-700 text-white font-semibold py-3 px-6 rounded-md\"\n        >\n          Calculate Calories\n        </button>\n        {calories && (\n          <div className=\"mt-6 text-xl font-semibold text-teal-700\">\n            {calories} Calories\n          </div>\n        )}\n      </div>\n\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-xl p-8\">\n        <h2 className=\"text-3xl font-bold text-center text-teal-600 mb-6\">\n          BMI Calculator\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block font-medium text-teal-700 mb-1\">Weight ({unit})</label>\n            <input\n              type=\"number\"\n              placeholder={`e.g. ${unit === \"lbs\" ? \"154\" : \"70\"}`}\n              value={weightBmi}\n              onChange={(e) => setWeightBmi(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n          {heightUnit === \"ft-in\" ? (\n            <div>\n              <label className=\"block font-medium text-teal-700 mb-1\">Height (ft & in)</label>\n              <div className=\"flex space-x-4\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Feet\"\n                  value={heightBmiFeet}\n                  onChange={(e) => setHeightBmiFeet(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Inches\"\n                  value={heightBmiInches}\n                  onChange={(e) => setHeightBmiInches(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div>\n              <label className=\"block font-medium text-teal-700 mb-1\">Height (cm)</label>\n              <input\n                type=\"number\"\n                placeholder=\"e.g. 175\"\n                value={heightBmiCm}\n                onChange={(e) => setHeightBmiCm(e.target.value)}\n                className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n              />\n            </div>\n          )}\n        </div>\n        <button\n          onClick={calculateBMI}\n          className=\"w-full mt-6 bg-teal-600 hover:bg-teal-700 text-white font-semibold py-3 px-6 rounded-md\"\n        >\n          Calculate BMI\n        </button>\n        {bmi && (\n          <div className=\"mt-6 text-xl font-semibold text-teal-700\">\n            Your BMI is {bmi}.\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Calories;\n"],"names":["Calories","user","isAuthenticated","useAuth0","isSettingsLoaded","setIsSettingsLoaded","useState","unit","setUnit","heightUnit","setHeightUnit","age","setAge","gender","setGender","weightCalories","setWeightCalories","heightFeet","setHeightFeet","heightInches","setHeightInches","heightCm","setHeightCm","activityLevel","setActivityLevel","calories","setCalories","weightBmi","setWeightBmi","bmi","setBmi","heightBmiFeet","setHeightBmiFeet","heightBmiInches","setHeightBmiInches","heightBmiCm","setHeightBmiCm","useEffect","async","docRef","doc","db","sub","docSnap","getDoc","exists","_data$unit","_data$heightUnit","data","savedUnit","localStorage","getItem","savedHeightUnit","loadSettings","setItem","_jsxs","className","children","_jsx","type","value","onChange","e","target","placeholder","onClick","calculateCalories","w","parseFloat","a","parseInt","heightInCm","weightKg","maintenance","Math","round","calculateBMI","heightInMeters","toFixed"],"sourceRoot":""}