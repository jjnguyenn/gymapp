{"version":3,"file":"static/js/816.c22e259c.chunk.js","mappings":"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","sources":["components/WorkoutTracker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  collection,\n  addDoc,\n  getDocs,\n  query,\n  where,\n  doc,\n  getDoc,\n  orderBy,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport db from \"../Firebase\";\n\nfunction WorkoutTracker() {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const [exercise, setExercise] = useState(\"\");\n  const [customExercise, setCustomExercise] = useState(\"\");\n  const [sets, setSets] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [weightUnit, setWeightUnit] = useState(\"kg\");\n  const [workoutLog, setWorkoutLog] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Load from localStorage\n  const loadLocalWorkouts = () => {\n    try {\n      const stored = localStorage.getItem(\"localWorkouts\");\n      return stored ? JSON.parse(stored) : [];\n    } catch {\n      return [];\n    }\n  };\n\n  // Save to localStorage\n  const saveLocalWorkouts = (workouts) => {\n    localStorage.setItem(\"localWorkouts\", JSON.stringify(workouts));\n  };\n\n  useEffect(() => {\n    const fetchWorkoutLog = async () => {\n      setLoading(true);\n      try {\n        let firebaseWorkouts = [];\n        if (isAuthenticated && user) {\n          const q = query(\n            collection(db, \"workouts\"),\n            where(\"userId\", \"==\", user.sub),\n            orderBy(\"timestamp\", \"desc\")\n          );\n          const querySnapshot = await getDocs(q);\n          firebaseWorkouts = querySnapshot.docs.map((doc) => doc.data());\n        }\n\n        const localWorkouts = loadLocalWorkouts();\n        setWorkoutLog([...firebaseWorkouts, ...localWorkouts]);\n      } catch (error) {\n        console.error(\"Error fetching workouts: \", error);\n        alert(\"There was an error fetching your workouts. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchSettings = async () => {\n      if (isAuthenticated && user) {\n        try {\n            \n            // Try localStorage first\n    const localSettings = localStorage.getItem(\"userSettings\");\n    if (localSettings) {\n      const parsed = JSON.parse(localSettings);\n      setWeightUnit(parsed.unit || \"kg\");\n      return;\n   \n        } \n        const settingsRef = doc(db, \"settings\", user.sub);\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) {\n          const settingsData = settingsSnap.data();\n          setWeightUnit(settingsData.unit || \"kg\");\n        }\n    }catch (error) {\n          console.error(\"Error fetching user settings:\", error);\n        }\n      }\n    };\n\n    fetchWorkoutLog();\n    fetchSettings();\n  }, [isAuthenticated, user]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const finalExercise =\n      exercise === \"Other\" ? customExercise.trim() : exercise;\n\n    if (!finalExercise || !sets || !reps || !weight) return;\n\n    const workoutData = {\n      exercise: finalExercise,\n      sets,\n      reps,\n      weight,\n      weightUnit,\n      timestamp: Date.now(),\n      userId: user?.sub || null,\n    };\n\n    if (isAuthenticated && user) {\n      try {\n        await addDoc(collection(db, \"workouts\"), workoutData);\n      } catch (error) {\n        console.error(\"Error saving workout:\", error);\n        alert(\"There was an error saving your workout. Please try again.\");\n      }\n    } else {\n      const updatedLocal = [workoutData, ...loadLocalWorkouts()];\n      saveLocalWorkouts(updatedLocal);\n    }\n\n    setWorkoutLog((prev) => [workoutData, ...prev]);\n    setExercise(\"\");\n    setCustomExercise(\"\");\n    setSets(\"\");\n    setReps(\"\");\n    setWeight(\"\");\n  };\n\n  const handleReset = () => {\n    setExercise(\"\");\n    setCustomExercise(\"\");\n    setSets(\"\");\n    setReps(\"\");\n    setWeight(\"\");\n  };\n\n  const handleClearAll = async () => {\n    const confirmClear = window.confirm(\n      \"Are you sure you want to delete all workout logs?\"\n    );\n    if (!confirmClear) return;\n\n    try {\n      if (isAuthenticated && user) {\n        const q = query(\n          collection(db, \"workouts\"),\n          where(\"userId\", \"==\", user.sub)\n        );\n        const querySnapshot = await getDocs(q);\n\n        const deletePromises = querySnapshot.docs.map((workoutDoc) =>\n          deleteDoc(doc(db, \"workouts\", workoutDoc.id))\n        );\n        await Promise.all(deletePromises);\n      }\n\n      localStorage.removeItem(\"localWorkouts\");\n      setWorkoutLog([]);\n    } catch (error) {\n      console.error(\"Error deleting workouts:\", error);\n      alert(\"Error deleting workouts.\");\n    }\n  };\n\n  if (isLoading)\n    return <p className=\"text-center text-gray-500\">Checking authentication</p>;\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4\">\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-lg p-6 transition-all\">\n        {!isAuthenticated && (\n          <div className=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4 rounded-md\">\n            <p className=\"font-semibold\">You are not logged in.</p>\n            <p className=\"text-sm\">\n              Your workouts will be saved locally but not to the cloud.\n            </p>\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <label className=\"block font-medium mb-1\">Exercise</label>\n            <select\n              value={exercise}\n              onChange={(e) => setExercise(e.target.value)}\n              className=\"w-full border rounded-md p-2 bg-white dark:bg-gray-800\"\n            >\n              <option value=\"\">Select Exercise</option>\n              <option value=\"Bench Press\">Bench Press</option>\n              <option value=\"Squat\">Squat</option>\n              <option value=\"Deadlift\">Deadlift</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n          {exercise === \"Other\" && (\n            <div>\n              <label className=\"block font-medium mb-1\">Custom Exercise</label>\n              <input\n                type=\"text\"\n                value={customExercise}\n                onChange={(e) => setCustomExercise(e.target.value)}\n                className=\"w-full border rounded-md p-2 bg-white dark:bg-gray-800\"\n              />\n            </div>\n          )}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block font-medium mb-1\">Sets</label>\n              <input\n                type=\"number\"\n                value={sets}\n                onChange={(e) => setSets(e.target.value)}\n                className=\"w-full border rounded-md p-2 bg-white dark:bg-gray-800\"\n              />\n            </div>\n            <div>\n              <label className=\"block font-medium mb-1\">Reps</label>\n              <input\n                type=\"number\"\n                value={reps}\n                onChange={(e) => setReps(e.target.value)}\n                className=\"w-full border rounded-md p-2 bg-white dark:bg-gray-800\"\n              />\n            </div>\n          </div>\n          <div>\n            <label className=\"block font-medium mb-1\">Weight ({weightUnit})</label>\n            <input\n              type=\"number\"\n              value={weight}\n              onChange={(e) => setWeight(e.target.value)}\n              className=\"w-full border rounded-md p-2 bg-white dark:bg-gray-800\"\n            />\n          </div>\n          <div className=\"flex gap-4\">\n            <button\n              type=\"submit\"\n              className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n            >\n              Add Workout\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleReset}\n              className=\"bg-gray-300 text-black px-4 py-2 rounded hover:bg-gray-400\"\n            >\n              Reset\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleClearAll}\n              className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 ml-auto\"\n            >\n              Clear All\n            </button>\n          </div>\n        </form>\n\n        <hr className=\"my-6 border-gray-300 dark:border-gray-600\" />\n\n        <h2 className=\"text-xl font-semibold mb-4\">Workout Log</h2>\n        {workoutLog.length === 0 ? (\n          <p className=\"text-gray-500\">No workouts logged yet.</p>\n        ) : (\n          <ul className=\"space-y-2\">\n            {workoutLog.map((entry, index) => (\n              <li\n                key={index}\n                className=\"p-4 border rounded-md bg-gray-50 dark:bg-gray-800 dark:border-gray-700\"\n              >\n                <p className=\"font-medium text-lg\">{entry.exercise}</p>\n                <p className=\"text-sm\">\n                  {entry.sets} sets × {entry.reps} reps @ {entry.weight}\n                  {entry.weightUnit}\n                </p>\n                <p className=\"text-xs text-gray-500\">\n                  {new Date(entry.timestamp).toLocaleString()}\n                </p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default WorkoutTracker;\n"],"names":["user","isAuthenticated","isLoading","useAuth0","exercise","setExercise","useState","customExercise","setCustomExercise","sets","setSets","reps","setReps","weight","setWeight","weightUnit","setWeightUnit","workoutLog","setWorkoutLog","loading","setLoading","loadLocalWorkouts","stored","localStorage","getItem","JSON","parse","useEffect","async","firebaseWorkouts","q","query","collection","db","where","sub","orderBy","getDocs","docs","map","doc","data","localWorkouts","error","console","alert","fetchWorkoutLog","localSettings","parsed","unit","settingsRef","settingsSnap","getDoc","exists","settingsData","fetchSettings","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","finalExercise","trim","workoutData","timestamp","Date","now","userId","addDoc","updatedLocal","workouts","setItem","stringify","prev","value","onChange","target","type","onClick","handleReset","window","confirm","deletePromises","workoutDoc","deleteDoc","id","Promise","all","removeItem","length","entry","index","toLocaleString"],"sourceRoot":""}