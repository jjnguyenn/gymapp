{"version":3,"file":"static/js/816.fca1df10.chunk.js","mappings":"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","sources":["components/WorkoutTracker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  collection,\n  addDoc,\n  getDocs,\n  query,\n  where,\n  doc,\n  getDoc,\n  orderBy,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport db from \"../Firebase\";\n\nfunction WorkoutTracker() {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const [exercise, setExercise] = useState(\"\");\n  const [customExercise, setCustomExercise] = useState(\"\");\n  const [sets, setSets] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [weightUnit, setWeightUnit] = useState(\"kg\");\n  const [workoutLog, setWorkoutLog] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchWorkoutLog = async () => {\n      if (!isAuthenticated || !user) return;\n\n      setLoading(true);\n      try {\n        const q = query(\n          collection(db, \"workouts\"),\n          where(\"userId\", \"==\", user.sub),\n          orderBy(\"timestamp\", \"desc\")\n        );\n        const querySnapshot = await getDocs(q);\n        const fetchedWorkouts = querySnapshot.docs.map((doc) => doc.data());\n        setWorkoutLog(fetchedWorkouts);\n      } catch (error) {\n        console.error(\"Error fetching workouts: \", error);\n        alert(\"There was an error fetching your workouts. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchSettings = async () => {\n      if (isAuthenticated && user) {\n        try {\n          const settingsRef = doc(db, \"settings\", user.sub);\n          const settingsSnap = await getDoc(settingsRef);\n\n          if (settingsSnap.exists()) {\n            const settingsData = settingsSnap.data();\n            setWeightUnit(settingsData.unit || \"kg\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching user settings:\", error);\n        }\n      }\n    };\n\n    fetchWorkoutLog();\n    fetchSettings();\n  }, [isAuthenticated, user]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const finalExercise =\n      exercise === \"Other\" ? customExercise.trim() : exercise;\n\n    if (!finalExercise || !sets || !reps || !weight) return;\n\n    const workoutData = {\n      exercise: finalExercise,\n      sets,\n      reps,\n      weight,\n      weightUnit,\n      timestamp: Date.now(),\n      userId: user?.sub || null,\n    };\n\n    if (isAuthenticated && user) {\n      try {\n        await addDoc(collection(db, \"workouts\"), workoutData);\n        setWorkoutLog((prev) => [workoutData, ...prev]);\n      } catch (error) {\n        console.error(\"Error saving workout:\", error);\n        alert(\"There was an error saving your workout. Please try again.\");\n      }\n    }\n\n    setExercise(\"\");\n    setCustomExercise(\"\");\n    setSets(\"\");\n    setReps(\"\");\n    setWeight(\"\");\n  };\n\n  const handleReset = () => {\n    setExercise(\"\");\n    setCustomExercise(\"\");\n    setSets(\"\");\n    setReps(\"\");\n    setWeight(\"\");\n  };\n\n  const handleClearAll = async () => {\n    const confirmClear = window.confirm(\n      \"Are you sure you want to delete all workout logs?\"\n    );\n    if (!confirmClear || !user) return;\n\n    try {\n      const q = query(\n        collection(db, \"workouts\"),\n        where(\"userId\", \"==\", user.sub)\n      );\n      const querySnapshot = await getDocs(q);\n\n      const deletePromises = querySnapshot.docs.map((workoutDoc) =>\n        deleteDoc(doc(db, \"workouts\", workoutDoc.id))\n      );\n      await Promise.all(deletePromises);\n\n      setWorkoutLog([]);\n    } catch (error) {\n      console.error(\"Error deleting workout logs:\", error);\n      alert(\"Error deleting workout logs.\");\n    }\n  };\n\n  if (isLoading)\n    return <p className=\"text-center text-gray-500\">Checking authentication...</p>;\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4\">\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-lg p-6 transition-all\">\n        {!isAuthenticated && (\n          <div className=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4 rounded-md\">\n            <p className=\"font-semibold\">You are not logged in.</p>\n            <p className=\"text-sm\">\n              Workouts will not be saved after you close this tab.\n            </p>\n          </div>\n        )}\n\n        <h2 className=\"text-2xl font-bold text-teal-600 mb-4 text-center\">\n          Workout Logger\n        </h2>\n\n        <div\n          className={`${\n            !isAuthenticated ? \"opacity-50 pointer-events-none select-none\" : \"\"\n          } space-y-4`}\n        >\n          <form onSubmit={handleSubmit}>\n            <div>\n              <label\n                htmlFor=\"exercise\"\n                className=\"block font-medium text-teal-600 mb-1\"\n              >\n                Exercise\n              </label>\n              <select\n                id=\"exercise\"\n                className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                value={exercise}\n                onChange={(e) => setExercise(e.target.value)}\n                required\n              >\n                <option value=\"\" disabled>\n                  Select an exercise...\n                </option>\n                <option value=\"Bench\">Bench</option>\n                <option value=\"Squat\">Squat</option>\n                <option value=\"Deadlift\">Deadlift</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n\n            {exercise === \"Other\" && (\n              <div>\n                <label\n                  htmlFor=\"customExercise\"\n                  className=\"block font-medium text-teal-600 mb-1\"\n                >\n                  Custom Exercise\n                </label>\n                <input\n                  id=\"customExercise\"\n                  type=\"text\"\n                  className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                  value={customExercise}\n                  onChange={(e) => setCustomExercise(e.target.value)}\n                  placeholder=\"Enter exercise name\"\n                  required\n                />\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-3 gap-4\">\n              <div>\n                <label\n                  htmlFor=\"sets\"\n                  className=\"block font-medium text-teal-600 mb-1\"\n                >\n                  Sets\n                </label>\n                <input\n                  id=\"sets\"\n                  type=\"number\"\n                  min=\"1\"\n                  className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                  value={sets}\n                  onChange={(e) => setSets(e.target.value)}\n                  required\n                />\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"reps\"\n                  className=\"block font-medium text-teal-600 mb-1\"\n                >\n                  Reps\n                </label>\n                <input\n                  id=\"reps\"\n                  type=\"number\"\n                  min=\"1\"\n                  className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                  value={reps}\n                  onChange={(e) => setReps(e.target.value)}\n                  required\n                />\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"weight\"\n                  className=\"block font-medium text-teal-600 mb-1\"\n                >\n                  Weight ({weightUnit})\n                </label>\n                <input\n                  id=\"weight\"\n                  type=\"number\"\n                  min=\"1\"\n                  className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                  value={weight}\n                  onChange={(e) => setWeight(e.target.value)}\n                  required\n                />\n              </div>\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={!isAuthenticated}\n              className={`w-full bg-teal-600 hover:bg-teal-700 text-white font-semibold py-2 px-4 rounded-md transition-all ${\n                !isAuthenticated ? \"cursor-not-allowed\" : \"\"\n              }`}\n            >\n              Save Workout\n            </button>\n          </form>\n        </div>\n\n        <button\n          onClick={handleReset}\n          className=\"w-full mt-4 bg-gray-400 hover:bg-gray-500 text-white font-semibold py-2 px-4 rounded-md transition-all\"\n        >\n          Reset\n        </button>\n\n        {isAuthenticated && workoutLog.length > 0 && (\n          <button\n            onClick={handleClearAll}\n            className=\"w-full mt-4 bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-md transition-all\"\n          >\n            Clear All Logs\n          </button>\n        )}\n      </div>\n\n      <div className=\"mt-8\">\n        <h3 className=\"text-xl font-semibold text-teal-600 mb-4\">Workout Log</h3>\n        {loading ? (\n          <p className=\"text-center text-teal-600\">Loading...</p>\n        ) : workoutLog.length === 0 ? (\n          <p className=\"text-gray-500\">No workouts logged yet!</p>\n        ) : (\n          <ul className=\"space-y-4\">\n            {workoutLog.map((entry, index) => (\n              <li\n                key={index}\n                className=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg shadow-md\"\n              >\n                <p className=\"text-teal-700 dark:text-teal-300 font-semibold\">\n                  {entry.exercise}\n                </p>\n                <p className=\"text-teal-500 dark:text-teal-400\">\n                  Sets: {entry.sets} | Reps: {entry.reps}\n                </p>\n                <p className=\"text-teal-500 dark:text-teal-400\">\n                  Weight: {entry.weight} {entry.weightUnit}\n                </p>\n                <p className=\"text-sm text-gray-500 mt-1\">\n                  {new Date(entry.timestamp).toLocaleString()}\n                </p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default WorkoutTracker;\n"],"names":["user","isAuthenticated","isLoading","useAuth0","exercise","setExercise","useState","customExercise","setCustomExercise","sets","setSets","reps","setReps","weight","setWeight","weightUnit","setWeightUnit","workoutLog","setWorkoutLog","loading","setLoading","useEffect","async","q","query","collection","db","where","sub","orderBy","fetchedWorkouts","getDocs","docs","map","doc","data","error","console","alert","fetchWorkoutLog","settingsRef","settingsSnap","getDoc","exists","settingsData","unit","fetchSettings","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","finalExercise","trim","workoutData","timestamp","Date","now","userId","addDoc","prev","htmlFor","id","value","onChange","target","required","disabled","type","placeholder","min","onClick","handleReset","length","window","confirm","deletePromises","workoutDoc","deleteDoc","Promise","all","entry","index","toLocaleString"],"sourceRoot":""}