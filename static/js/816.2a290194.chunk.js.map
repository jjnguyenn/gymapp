{"version":3,"file":"static/js/816.2a290194.chunk.js","mappings":"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","sources":["components/WorkoutTracker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  collection,\n  addDoc,\n  getDocs,\n  query,\n  where,\n  doc,\n  getDoc,\n  orderBy,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport db from \"../Firebase\";\n\nfunction WorkoutTracker() {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const [exercise, setExercise] = useState(\"\");\n  const [customExercise, setCustomExercise] = useState(\"\");\n  const [sets, setSets] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [weightUnit, setWeightUnit] = useState(\"kg\");\n  const [workoutLog, setWorkoutLog] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchWorkoutLog = async () => {\n      if (!isAuthenticated || !user) return;\n\n      setLoading(true);\n      try {\n        const q = query(collection(db, \"workouts\"), where(\"userId\", \"==\", user.sub), orderBy(\"timestamp\", \"desc\"));\n        const querySnapshot = await getDocs(q);\n        const fetchedWorkouts = querySnapshot.docs.map((doc) => doc.data());\n        setWorkoutLog(fetchedWorkouts);\n      } catch (error) {\n        console.error(\"Error fetching workouts: \", error);\n        alert(\"There was an error fetching your workouts. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchSettings = async () => {\n      if (isAuthenticated && user) {\n        try {\n          const settingsRef = doc(db, \"settings\", user.sub);\n          const settingsSnap = await getDoc(settingsRef);\n\n          if (settingsSnap.exists()) {\n            const settingsData = settingsSnap.data();\n            setWeightUnit(settingsData.unit || \"kg\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching user settings:\", error);\n        }\n      }\n    };\n\n    fetchWorkoutLog();\n    fetchSettings();\n  }, [isAuthenticated, user]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const finalExercise = exercise === \"Other\" ? customExercise.trim() : exercise;\n\n    if (!finalExercise || !sets || !reps || !weight) return;\n\n    const workoutData = {\n      exercise: finalExercise,\n      sets,\n      reps,\n      weight,\n      weightUnit,\n      timestamp: Date.now(),\n      userId: user?.sub || null,\n    };\n\n    if (isAuthenticated && user) {\n      try {\n        await addDoc(collection(db, \"workouts\"), workoutData);\n        setWorkoutLog((prev) => [...prev, workoutData]);\n      } catch (error) {\n        console.error(\"Error saving workout:\", error);\n        alert(\"There was an error saving your workout. Please try again.\");\n      }\n    }\n\n    setExercise(\"\");\n    setCustomExercise(\"\");\n    setSets(\"\");\n    setReps(\"\");\n    setWeight(\"\");\n  };\n\n  const handleReset = () => {\n    setExercise(\"\");\n    setCustomExercise(\"\");\n    setSets(\"\");\n    setReps(\"\");\n    setWeight(\"\");\n  };\n\n  const handleClearAll = async () => {\n    const confirmClear = window.confirm(\"Are you sure you want to delete all workout logs?\");\n    if (!confirmClear || !user) return;\n\n    try {\n      const q = query(collection(db, \"workouts\"), where(\"userId\", \"==\", user.sub));\n      const querySnapshot = await getDocs(q);\n\n      const deletePromises = querySnapshot.docs.map((workoutDoc) => deleteDoc(doc(db, \"workouts\", workoutDoc.id)));\n      await Promise.all(deletePromises);\n\n      setWorkoutLog([]);\n    } catch (error) {\n      console.error(\"Error deleting workout logs:\", error);\n      alert(\"Error deleting workout logs.\");\n    }\n  };\n\n  if (isLoading) return <p className=\"text-center text-gray-500\">Checking authentication...</p>;\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4\">\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-lg p-6 transition-all\">\n        {!isAuthenticated && (\n          <p className=\"text-yellow-600 mb-4 font-semibold text-center\">\n            You are not logged in. Workouts will not be saved after you close this tab.\n          </p>\n        )}\n\n        <h2 className=\"text-2xl font-bold text-teal-600 mb-4 text-center\">Workout Logger</h2>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"exercise\" className=\"block font-medium text-teal-600 mb-1\">Exercise</label>\n            <select\n              id=\"exercise\"\n              className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n              value={exercise}\n              onChange={(e) => setExercise(e.target.value)}\n              required\n            >\n              <option value=\"\" disabled>Select an exercise...</option>\n              <option value=\"Bench\">Bench</option>\n              <option value=\"Squat\">Squat</option>\n              <option value=\"Deadlift\">Deadlift</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n\n          {exercise === \"Other\" && (\n            <div>\n              <label htmlFor=\"customExercise\" className=\"block font-medium text-teal-600 mb-1\">Custom Exercise</label>\n              <input\n                id=\"customExercise\"\n                type=\"text\"\n                className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                value={customExercise}\n                onChange={(e) => setCustomExercise(e.target.value)}\n                placeholder=\"Enter exercise name\"\n                required\n              />\n            </div>\n          )}\n\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"sets\" className=\"block font-medium text-teal-600 mb-1\">Sets</label>\n              <input\n                id=\"sets\"\n                type=\"number\"\n                min=\"1\"\n                className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                value={sets}\n                onChange={(e) => setSets(e.target.value)}\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"reps\" className=\"block font-medium text-teal-600 mb-1\">Reps</label>\n              <input\n                id=\"reps\"\n                type=\"number\"\n                min=\"1\"\n                className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                value={reps}\n                onChange={(e) => setReps(e.target.value)}\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"weight\" className=\"block font-medium text-teal-600 mb-1\">Weight ({weightUnit})</label>\n              <input\n                id=\"weight\"\n                type=\"number\"\n                min=\"1\"\n                className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                value={weight}\n                onChange={(e) => setWeight(e.target.value)}\n                required\n              />\n            </div>\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"w-full bg-teal-600 hover:bg-teal-700 text-white font-semibold py-2 px-4 rounded-md transition-all\"\n          >\n            Save Workout\n          </button>\n        </form>\n\n        <button\n          onClick={handleReset}\n          className=\"w-full mt-4 bg-gray-400 hover:bg-gray-500 text-white font-semibold py-2 px-4 rounded-md transition-all\"\n        >\n          Reset\n        </button>\n\n        {workoutLog.length > 0 && (\n          <button\n            onClick={handleClearAll}\n            className=\"w-full mt-4 bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-md transition-all\"\n          >\n            Clear All Logs\n          </button>\n        )}\n      </div>\n\n      <div className=\"mt-8\">\n        <h3 className=\"text-xl font-semibold text-teal-600 mb-4\">Workout Log</h3>\n        {loading ? (\n          <p className=\"text-center text-teal-600\">Loading...</p>\n        ) : workoutLog.length === 0 ? (\n          <p className=\"text-gray-500\">No workouts logged yet!</p>\n        ) : (\n          <ul className=\"space-y-4\">\n            {workoutLog.map((entry, index) => (\n              <li key={index} className=\"bg-gray-100 p-4 rounded-lg shadow-md\">\n                <p className=\"text-teal-700 font-semibold\">{entry.exercise}</p>\n                <p className=\"text-teal-500\">Sets: {entry.sets} | Reps: {entry.reps}</p>\n                <p className=\"text-teal-500\">Weight: {entry.weight} {entry.weightUnit}</p>\n                <p className=\"text-sm text-gray-500 mt-1\">\n                  {new Date(entry.timestamp).toLocaleString()}\n                </p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default WorkoutTracker;\n"],"names":["user","isAuthenticated","isLoading","useAuth0","exercise","setExercise","useState","customExercise","setCustomExercise","sets","setSets","reps","setReps","weight","setWeight","weightUnit","setWeightUnit","workoutLog","setWorkoutLog","loading","setLoading","useEffect","async","q","query","collection","db","where","sub","orderBy","fetchedWorkouts","getDocs","docs","map","doc","data","error","console","alert","fetchWorkoutLog","settingsRef","settingsSnap","getDoc","exists","settingsData","unit","fetchSettings","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","finalExercise","trim","workoutData","timestamp","Date","now","userId","addDoc","prev","htmlFor","id","value","onChange","target","required","disabled","type","placeholder","min","onClick","handleReset","length","window","confirm","deletePromises","workoutDoc","deleteDoc","Promise","all","entry","index","toLocaleString"],"sourceRoot":""}