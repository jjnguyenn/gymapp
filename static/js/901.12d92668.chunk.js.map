{"version":3,"file":"static/js/901.12d92668.chunk.js","mappings":"kLAKA,MA4UA,EA5UiBA,KACf,MAAM,KAAEC,EAAI,gBAAEC,IAAoBC,EAAAA,EAAAA,OAE3BC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,QAC1BC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,OACtCG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAUJ,IAEnDS,EAAKC,IAAUN,EAAAA,EAAAA,UAAS,KACxBO,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,SAC9BS,EAAgBC,IAAqBV,EAAAA,EAAAA,UAAS,KAC9CW,EAAYC,IAAiBZ,EAAAA,EAAAA,UAAS,KACtCa,EAAcC,IAAmBd,EAAAA,EAAAA,UAAS,KAC1Ce,EAAUC,IAAehB,EAAAA,EAAAA,UAAS,KAClCiB,EAAeC,IAAoBlB,EAAAA,EAAAA,UAAS,QAC5CmB,EAAUC,IAAepB,EAAAA,EAAAA,UAAS,OAElCqB,EAAWC,IAAgBtB,EAAAA,EAAAA,UAAS,KACpCuB,EAAKC,IAAUxB,EAAAA,EAAAA,UAAS,OACxByB,EAAeC,IAAoB1B,EAAAA,EAAAA,UAAS,KAC5C2B,EAAiBC,IAAsB5B,EAAAA,EAAAA,UAAS,KAChD6B,EAAaC,IAAkB9B,EAAAA,EAAAA,UAAS,KAG/C+B,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,GAAIpC,GAAmBD,EAAM,CAC3B,MAAMsC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,WAAYxC,EAAKyC,KAClCC,QAAgBC,EAAAA,EAAAA,IAAOL,GAC7B,GAAII,EAAQE,SAAU,CAAC,IAADC,EAAAC,EACpB,MAAMC,EAAOL,EAAQK,OACrB3C,EAAiB,QAAVyC,EAACE,EAAK5C,YAAI,IAAA0C,EAAAA,EAAI,OACrBtC,EAA6B,QAAhBuC,EAACC,EAAKzC,kBAAU,IAAAwC,EAAAA,EAAI,KACnC,CACF,KAAO,CACL,MAAME,EAAYC,aAAaC,QAAQ,QACjCC,EAAkBF,aAAaC,QAAQ,cACzCF,GAAW5C,EAAQ4C,GACnBG,GAAiB5C,EAAc4C,EACrC,CACF,CAAE,MAAOC,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,CAAC,QACC3C,GAAoB,EACtB,GAGF6C,EAAc,GACb,CAACrD,EAAiBD,KAGrBoC,EAAAA,EAAAA,YAAU,KACR,GAAI5B,EAAkB,CACpB,MAAM+C,EAAcN,aAAaC,QAAQ,UACnCM,EAAcP,aAAaC,QAAQ,UAErCK,GAAaxC,EAAkBwC,GAC/BC,GAAanC,EAAYmC,EAC/B,IACC,CAAChD,KAGJ4B,EAAAA,EAAAA,YAAU,KACJnC,IACFgD,aAAaQ,QAAQ,OAAQtD,GAC7B8C,aAAaQ,QAAQ,aAAcnD,GACrC,GACC,CAACH,EAAMG,KAGV8B,EAAAA,EAAAA,YAAU,KACR,GAAmB,UAAf9B,GAA0BE,EAAkB,CAC9C,MAAMkD,EAAkBT,aAAaC,QAAQ,cACvCS,EAAoBV,aAAaC,QAAQ,gBAC3CQ,GAAiBzC,EAAcyC,GAC/BC,GAAmBxC,EAAgBwC,EACzC,MAAO,GAAmB,OAAfrD,GAAuBE,EAAkB,CAClD,MAAMoD,EAAgBX,aAAaC,QAAQ,YACvCU,GAAevC,EAAYuC,EACjC,IACC,CAACtD,EAAYE,KAGhB4B,EAAAA,EAAAA,YAAU,KACW,UAAf9B,GACFe,EAAY,IACZc,EAAe,MAEflB,EAAc,IACdE,EAAgB,IAChBY,EAAiB,IACjBE,EAAmB,KAGrBlB,EAAkB,IAClBY,EAAa,GAAG,GACf,CAACxB,EAAMG,IA8CV,OAAKE,GASHqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DC,SAAA,EAE1EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iFAAgFC,SAAA,EAC7FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAC,yBAGlEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,uCAAsCC,SAAC,SACxDC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLC,MAAOxD,EACPyD,SAAWC,GAAMzD,EAAOyD,EAAEC,OAAOH,OACjCI,YAAY,QACZR,UAAU,2EAIdD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,uCAAsCC,SAAC,YACxDF,EAAAA,EAAAA,MAAA,UACEK,MAAOtD,EACPuD,SAAWC,GAAMvD,EAAUuD,EAAEC,OAAOH,OACpCJ,UAAU,qEAAoEC,SAAA,EAE9EC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,OAAMH,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,SAAQH,SAAC,kBAI3BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,uCAAsCC,SAAA,CAAC,WAC7C5D,EAAK,QAEhB6D,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLC,MAAOpD,EACPqD,SAAWC,GAAMrD,EAAkBqD,EAAEC,OAAOH,OAC5CI,YAAa,SAAiB,QAATnE,EAAiB,MAAQ,MAC9C2D,UAAU,0EAIE,UAAfxD,GACCuD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,uCAAsCC,SAAC,sBACxDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLK,YAAY,OACZJ,MAAOlD,EACPmD,SAAWC,GAAMnD,EAAcmD,EAAEC,OAAOH,OACxCJ,UAAU,uEAEZE,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLK,YAAY,SACZJ,MAAOhD,EACPiD,SAAWC,GAAMjD,EAAgBiD,EAAEC,OAAOH,OAC1CJ,UAAU,6EAKhBD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,uCAAsCC,SAAC,iBACxDC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLK,YAAY,WACZJ,MAAO9C,EACP+C,SAAWC,GAAM/C,EAAY+C,EAAEC,OAAOH,OACtCJ,UAAU,2EAKhBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,uCAAsCC,SAAC,oBAGxDF,EAAAA,EAAAA,MAAA,UACEK,MAAO5C,EACP6C,SAAWC,GAAM7C,EAAiB6C,EAAEC,OAAOH,OAC3CJ,UAAU,qEAAoEC,SAAA,EAE9EC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,MAAKH,SAAC,qBACpBC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,QAAOH,SAAC,qBACtBC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,OAAMH,SAAC,qBACrBC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,QAAOH,SAAC,qBACtBC,EAAAA,EAAAA,KAAA,UAAQE,MAAM,MAAKH,SAAC,wBAK1BC,EAAAA,EAAAA,KAAA,UACEO,QAnJkBC,KACxB,IAAK9D,IAAQI,IAAoBE,IAAeI,EAAW,OAE3D,MAAMqD,EAAIC,WAAW5D,GACf6D,EAAIC,SAASlE,GAEnB,IAAImE,EAEFA,EADiB,UAAfvE,GAA0BU,GAAcE,EACN,MAAvB0D,SAAS5D,GAA+C,KAAzB4D,SAAS1D,GAExCwD,WAAWtD,GAG1B,MAAM0D,EAAoB,OAAT3E,EAAgBsE,EAAQ,QAAJA,EAO/BM,GAJO,SAAXnE,EACI,GAAKkE,EAAW,KAAOD,EAAa,EAAIF,EAAI,EAC5C,GAAKG,EAAW,KAAOD,EAAa,EAAIF,EAAI,KAExBD,WAAWpD,GACrCG,EAAYuD,KAAKC,MAAMF,GAAa,EA+H9BjB,UAAU,0FAAyFC,SACpG,uBAIAvC,IACCqC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,CACtDvC,EAAS,mBAMhBqC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iFAAgFC,SAAA,EAC7FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAC,oBAIlEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,uCAAsCC,SAAA,CAAC,WAC7C5D,EAAK,QAEhB6D,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLK,YAAa,SAAiB,QAATnE,EAAiB,MAAQ,MAC9C+D,MAAOxC,EACPyC,SAAWC,GAAMzC,EAAayC,EAAEC,OAAOH,OACvCJ,UAAU,0EAIE,UAAfxD,GACCuD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,uCAAsCC,SAAC,sBAGxDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLK,YAAY,OACZJ,MAAOpC,EACPqC,SAAWC,GAAMrC,EAAiBqC,EAAEC,OAAOH,OAC3CJ,UAAU,uEAEZE,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLK,YAAY,SACZJ,MAAOlC,EACPmC,SAAWC,GAAMnC,EAAmBmC,EAAEC,OAAOH,OAC7CJ,UAAU,6EAKhBD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,uCAAsCC,SAAC,iBACxDC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLK,YAAY,WACZJ,MAAOhC,EACPiC,SAAWC,GAAMjC,EAAeiC,EAAEC,OAAOH,OACzCJ,UAAU,8EAMlBE,EAAAA,EAAAA,KAAA,UACEO,QAhMaW,KACnB,IAAKxD,IAAeI,IAAkBI,EAAc,OAEpD,MAAM4C,EACK,OAAT3E,EAAgBuE,WAAWhD,GAAqC,QAAxBgD,WAAWhD,GAErD,IAAIyD,EAEFA,EADiB,UAAf7E,GAA0BwB,GAAiBE,EAEjB,MAA1B4C,SAAS9C,GAAsD,MAA5B8C,SAAS5C,GAE7B0C,WAAWxC,GAAe,IAI7CL,GADiBiD,GAAYK,EAAiBA,IAC9BC,QAAQ,GAAG,EAkLrBtB,UAAU,0FAAyFC,SACpG,kBAIAnC,IACCiC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,CAAC,QAClDnC,YApLZoC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,SAAC,uBAwL7C,C","sources":["components/Calories.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport db from \"../Firebase\";\n\nconst Calories = () => {\n  const { user, isAuthenticated } = useAuth0();\n\n  const [unit, setUnit] = useState(\"lbs\");\n  const [heightUnit, setHeightUnit] = useState(\"cm\");\n  const [isSettingsLoaded, setIsSettingsLoaded] = useState(!isAuthenticated);\n\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"male\");\n  const [weightCalories, setWeightCalories] = useState(\"\");\n  const [heightFeet, setHeightFeet] = useState(\"\");\n  const [heightInches, setHeightInches] = useState(\"\");\n  const [heightCm, setHeightCm] = useState(\"\");\n  const [activityLevel, setActivityLevel] = useState(\"1.2\");\n  const [calories, setCalories] = useState(null);\n\n  const [weightBmi, setWeightBmi] = useState(\"\");\n  const [bmi, setBmi] = useState(null);\n  const [heightBmiFeet, setHeightBmiFeet] = useState(\"\");\n  const [heightBmiInches, setHeightBmiInches] = useState(\"\");\n  const [heightBmiCm, setHeightBmiCm] = useState(\"\");\n\n  // Load settings from Firebase or localStorage\n  useEffect(() => {\n    const loadSettings = async () => {\n      try {\n        if (isAuthenticated && user) {\n          const docRef = doc(db, \"settings\", user.sub);\n          const docSnap = await getDoc(docRef);\n          if (docSnap.exists()) {\n            const data = docSnap.data();\n            setUnit(data.unit ?? \"lbs\");\n            setHeightUnit(data.heightUnit ?? \"cm\");\n          }\n        } else {\n          const localUnit = localStorage.getItem(\"unit\");\n          const localHeightUnit = localStorage.getItem(\"heightUnit\");\n          if (localUnit) setUnit(localUnit);\n          if (localHeightUnit) setHeightUnit(localHeightUnit);\n        }\n      } catch (error) {\n        console.error(\"Failed to load settings:\", error);\n      } finally {\n        setIsSettingsLoaded(true);\n      }\n    };\n\n    loadSettings();\n  }, [isAuthenticated, user]);\n\n  // Effect to update weight and height values based on settings\n  useEffect(() => {\n    if (isSettingsLoaded) {\n      const localWeight = localStorage.getItem(\"weight\");\n      const localHeight = localStorage.getItem(\"height\");\n\n      if (localWeight) setWeightCalories(localWeight);\n      if (localHeight) setHeightCm(localHeight); // or heightFeet, depending on the unit\n    }\n  }, [isSettingsLoaded]);\n\n  // Update localStorage when settings change\n  useEffect(() => {\n    if (isAuthenticated) {\n      localStorage.setItem(\"unit\", unit);\n      localStorage.setItem(\"heightUnit\", heightUnit);\n    }\n  }, [unit, heightUnit]);\n\n  // Effect to update height/weight input values based on settings\n  useEffect(() => {\n    if (heightUnit === \"ft-in\" && isSettingsLoaded) {\n      const localHeightFeet = localStorage.getItem(\"heightFeet\");\n      const localHeightInches = localStorage.getItem(\"heightInches\");\n      if (localHeightFeet) setHeightFeet(localHeightFeet);\n      if (localHeightInches) setHeightInches(localHeightInches);\n    } else if (heightUnit === \"cm\" && isSettingsLoaded) {\n      const localHeightCm = localStorage.getItem(\"heightCm\");\n      if (localHeightCm) setHeightCm(localHeightCm);\n    }\n  }, [heightUnit, isSettingsLoaded]);\n\n  // Handle height and weight unit switching\n  useEffect(() => {\n    if (heightUnit === \"ft-in\") {\n      setHeightCm(\"\"); \n      setHeightBmiCm(\"\");\n    } else {\n      setHeightFeet(\"\");\n      setHeightInches(\"\");\n      setHeightBmiFeet(\"\");\n      setHeightBmiInches(\"\");\n    }\n\n    setWeightCalories(\"\");\n    setWeightBmi(\"\");\n  }, [unit, heightUnit]);\n\n  // Calculate Calories\n  const calculateCalories = () => {\n    if (!age || !weightCalories || (!heightFeet && !heightCm)) return;\n\n    const w = parseFloat(weightCalories);\n    const a = parseInt(age);\n\n    let heightInCm;\n    if (heightUnit === \"ft-in\" && heightFeet && heightInches) {\n      heightInCm = parseInt(heightFeet) * 30.48 + parseInt(heightInches) * 2.54;\n    } else {\n      heightInCm = parseFloat(heightCm);\n    }\n\n    const weightKg = unit === \"kg\" ? w : w * 0.453592;\n\n    const bmr =\n      gender === \"male\"\n        ? 10 * weightKg + 6.25 * heightInCm - 5 * a + 5\n        : 10 * weightKg + 6.25 * heightInCm - 5 * a - 161;\n\n    const maintenance = bmr * parseFloat(activityLevel);\n    setCalories(Math.round(maintenance));\n  };\n\n  // Calculate BMI\n  const calculateBMI = () => {\n    if (!weightBmi || (!heightBmiFeet && !heightBmiCm)) return;\n\n    const weightKg =\n      unit === \"kg\" ? parseFloat(weightBmi) : parseFloat(weightBmi) * 0.453592;\n\n    let heightInMeters;\n    if (heightUnit === \"ft-in\" && heightBmiFeet && heightBmiInches) {\n      heightInMeters =\n        parseInt(heightBmiFeet) * 0.3048 + parseInt(heightBmiInches) * 0.0254;\n    } else {\n      heightInMeters = parseFloat(heightBmiCm) / 100;\n    }\n\n    const bmiValue = weightKg / (heightInMeters * heightInMeters);\n    setBmi(bmiValue.toFixed(2));\n  };\n\n  if (!isSettingsLoaded) {\n    return (\n      <div className=\"text-center text-teal-600 mt-12\">\n        Loading settings...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\n      {/* Calories Calculator */}\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-xl p-8\">\n        <h2 className=\"text-3xl font-bold text-center text-teal-600 mb-6\">\n          Daily Calorie Needs\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block font-medium text-teal-700 mb-1\">Age</label>\n            <input\n              type=\"number\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n              placeholder=\"Years\"\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block font-medium text-teal-700 mb-1\">Gender</label>\n            <select\n              value={gender}\n              onChange={(e) => setGender(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block font-medium text-teal-700 mb-1\">\n              Weight ({unit})\n            </label>\n            <input\n              type=\"number\"\n              value={weightCalories}\n              onChange={(e) => setWeightCalories(e.target.value)}\n              placeholder={`e.g. ${unit === \"lbs\" ? \"154\" : \"70\"}`}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n\n          {heightUnit === \"ft-in\" ? (\n            <div>\n              <label className=\"block font-medium text-teal-700 mb-1\">Height (ft & in)</label>\n              <div className=\"flex space-x-4\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Feet\"\n                  value={heightFeet}\n                  onChange={(e) => setHeightFeet(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Inches\"\n                  value={heightInches}\n                  onChange={(e) => setHeightInches(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div>\n              <label className=\"block font-medium text-teal-700 mb-1\">Height (cm)</label>\n              <input\n                type=\"number\"\n                placeholder=\"e.g. 175\"\n                value={heightCm}\n                onChange={(e) => setHeightCm(e.target.value)}\n                className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n              />\n            </div>\n          )}\n\n          <div className=\"md:col-span-2\">\n            <label className=\"block font-medium text-teal-700 mb-1\">\n              Activity Level\n            </label>\n            <select\n              value={activityLevel}\n              onChange={(e) => setActivityLevel(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"1.2\">0-1 days a week</option>\n              <option value=\"1.375\">1-3 days a week</option>\n              <option value=\"1.55\">3-5 days a week</option>\n              <option value=\"1.725\">6-7 days a week</option>\n              <option value=\"1.9\">Every day</option>\n            </select>\n          </div>\n        </div>\n\n        <button\n          onClick={calculateCalories}\n          className=\"w-full mt-6 bg-teal-600 hover:bg-teal-700 text-white font-semibold py-3 px-6 rounded-md\"\n        >\n          Calculate Calories\n        </button>\n\n        {calories && (\n          <div className=\"mt-6 text-xl font-semibold text-teal-700\">\n            {calories} Calories\n          </div>\n        )}\n      </div>\n\n      {/* BMI Calculator */}\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-xl p-8\">\n        <h2 className=\"text-3xl font-bold text-center text-teal-600 mb-6\">\n          BMI Calculator\n        </h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block font-medium text-teal-700 mb-1\">\n              Weight ({unit})\n            </label>\n            <input\n              type=\"number\"\n              placeholder={`e.g. ${unit === \"lbs\" ? \"154\" : \"70\"}`}\n              value={weightBmi}\n              onChange={(e) => setWeightBmi(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n\n          {heightUnit === \"ft-in\" ? (\n            <div>\n              <label className=\"block font-medium text-teal-700 mb-1\">\n                Height (ft & in)\n              </label>\n              <div className=\"flex space-x-4\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Feet\"\n                  value={heightBmiFeet}\n                  onChange={(e) => setHeightBmiFeet(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Inches\"\n                  value={heightBmiInches}\n                  onChange={(e) => setHeightBmiInches(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div>\n              <label className=\"block font-medium text-teal-700 mb-1\">Height (cm)</label>\n              <input\n                type=\"number\"\n                placeholder=\"e.g. 175\"\n                value={heightBmiCm}\n                onChange={(e) => setHeightBmiCm(e.target.value)}\n                className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n              />\n            </div>\n          )}\n        </div>\n\n        <button\n          onClick={calculateBMI}\n          className=\"w-full mt-6 bg-teal-600 hover:bg-teal-700 text-white font-semibold py-3 px-6 rounded-md\"\n        >\n          Calculate BMI\n        </button>\n\n        {bmi && (\n          <div className=\"mt-6 text-xl font-semibold text-teal-700\">\n            BMI: {bmi}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Calories;\n"],"names":["Calories","user","isAuthenticated","useAuth0","unit","setUnit","useState","heightUnit","setHeightUnit","isSettingsLoaded","setIsSettingsLoaded","age","setAge","gender","setGender","weightCalories","setWeightCalories","heightFeet","setHeightFeet","heightInches","setHeightInches","heightCm","setHeightCm","activityLevel","setActivityLevel","calories","setCalories","weightBmi","setWeightBmi","bmi","setBmi","heightBmiFeet","setHeightBmiFeet","heightBmiInches","setHeightBmiInches","heightBmiCm","setHeightBmiCm","useEffect","async","docRef","doc","db","sub","docSnap","getDoc","exists","_data$unit","_data$heightUnit","data","localUnit","localStorage","getItem","localHeightUnit","error","console","loadSettings","localWeight","localHeight","setItem","localHeightFeet","localHeightInches","localHeightCm","_jsxs","className","children","_jsx","type","value","onChange","e","target","placeholder","onClick","calculateCalories","w","parseFloat","a","parseInt","heightInCm","weightKg","maintenance","Math","round","calculateBMI","heightInMeters","toFixed"],"sourceRoot":""}