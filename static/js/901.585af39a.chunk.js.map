{"version":3,"file":"static/js/901.585af39a.chunk.js","mappings":"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","sources":["components/Calories.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport db from \"../Firebase\";\n\nconst Calories = () => {\n  const { user, isAuthenticated } = useAuth0();\n\n  const [isSettingsLoaded, setIsSettingsLoaded] = useState(false);\n  const [unit, setUnit] = useState(\"lbs\");\n  const [heightUnit, setHeightUnit] = useState(\"cm\");\n\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"male\");\n  const [weightCalories, setWeightCalories] = useState(\"\");\n  const [heightFeet, setHeightFeet] = useState(\"\");\n  const [heightInches, setHeightInches] = useState(\"\");\n  const [heightCm, setHeightCm] = useState(\"\");\n  const [activityLevel, setActivityLevel] = useState(\"1.2\");\n  const [calories, setCalories] = useState(null);\n\n  const [weightBmi, setWeightBmi] = useState(\"\");\n  const [bmi, setBmi] = useState(null);\n  const [heightBmiFeet, setHeightBmiFeet] = useState(\"\");\n  const [heightBmiInches, setHeightBmiInches] = useState(\"\");\n  const [heightBmiCm, setHeightBmiCm] = useState(\"\");\n\n  useEffect(() => {\n    const loadSettings = async () => {\n      if (isAuthenticated && user) {\n        const docRef = doc(db, \"settings\", user.sub);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          setUnit(data.unit ?? \"lbs\");\n          setHeightUnit(data.heightUnit ?? \"cm\");\n        }\n      } else {\n        setUnit(\"lbs\");\n        setHeightUnit(\"ft-in\");\n      }\n      setIsSettingsLoaded(true);\n    };\n\n    loadSettings();\n  }, [isAuthenticated, user]);\n\n  const calculateCalories = () => {\n    if (!age || !weightCalories || (!heightFeet && !heightCm)) return;\n\n    const w = parseFloat(weightCalories);\n    const a = parseInt(age);\n\n    let heightInCm;\n    if (heightUnit === \"ft-in\" && heightFeet && heightInches) {\n      heightInCm =\n        parseInt(heightFeet) * 30.48 + parseInt(heightInches) * 2.54;\n    } else {\n      heightInCm = parseFloat(heightCm);\n    }\n\n    const weightKg = unit === \"kg\" ? w : w * 0.453592;\n\n    const bmr =\n      gender === \"male\"\n        ? 10 * weightKg + 6.25 * heightInCm - 5 * a + 5\n        : 10 * weightKg + 6.25 * heightInCm - 5 * a - 161;\n\n    const maintenance = bmr * parseFloat(activityLevel);\n    setCalories(Math.round(maintenance));\n  };\n\n  const calculateBMI = () => {\n    if (!weightBmi || (!heightBmiFeet && !heightBmiCm)) return;\n\n    const weightKg =\n      unit === \"kg\" ? parseFloat(weightBmi) : parseFloat(weightBmi) * 0.453592;\n\n    let heightInMeters;\n    if (heightUnit === \"ft-in\" && heightBmiFeet && heightBmiInches) {\n      heightInMeters =\n        parseInt(heightBmiFeet) * 0.3048 + parseInt(heightBmiInches) * 0.0254;\n    } else {\n      heightInMeters = parseFloat(heightBmiCm) / 100;\n    }\n\n    const bmiValue = weightKg / (heightInMeters * heightInMeters);\n    setBmi(bmiValue.toFixed(2));\n  };\n\n  const handleUnitChange = (newUnit, newHeightUnit) => {\n    setUnit(newUnit);\n    setHeightUnit(newHeightUnit);\n  };\n\n  if (!isSettingsLoaded) {\n    return <div className=\"text-center text-teal-600\">Loading settings...</div>;\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\n      {/* Calorie Calculator */}\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-xl p-8\">\n        <h2 className=\"text-3xl font-bold text-center text-teal-600 mb-6\">\n          Daily Calorie Needs\n        </h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Age\n            </label>\n            <input\n              type=\"number\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n              placeholder=\"Years\"\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Gender\n            </label>\n            <select\n              value={gender}\n              onChange={(e) => setGender(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Weight Unit\n            </label>\n            <select\n              value={unit}\n              onChange={(e) => handleUnitChange(e.target.value, heightUnit)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"lbs\">lbs</option>\n              <option value=\"kg\">kg</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Height Unit\n            </label>\n            <select\n              value={heightUnit}\n              onChange={(e) => handleUnitChange(unit, e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"ft-in\">ft</option>\n              <option value=\"cm\">cm</option>\n            </select>\n          </div>\n\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Weight ({unit})\n            </label>\n            <input\n              type=\"number\"\n              value={weightCalories}\n              onChange={(e) => setWeightCalories(e.target.value)}\n              placeholder={`e.g. ${unit === \"lbs\" ? \"154\" : \"70\"}`}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n\n          {heightUnit === \"ft-in\" ? (\n            <div className=\"md:col-span-2\">\n              <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n                Height (ft & in)\n              </label>\n              <div className=\"flex gap-4\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Feet\"\n                  value={heightFeet}\n                  onChange={(e) => setHeightFeet(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Inches\"\n                  value={heightInches}\n                  onChange={(e) => setHeightInches(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"md:col-span-2\">\n              <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n                Height (cm)\n              </label>\n              <input\n                type=\"number\"\n                placeholder=\"e.g. 175\"\n                value={heightCm}\n                onChange={(e) => setHeightCm(e.target.value)}\n                className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n              />\n            </div>\n          )}\n\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">\n              Activity Level\n            </label>\n            <select\n              value={activityLevel}\n              onChange={(e) => setActivityLevel(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            >\n              <option value=\"1.2\">0-1 days a week</option>\n              <option value=\"1.375\">1-3 days a week</option>\n              <option value=\"1.55\">3-5 days a week</option>\n              <option value=\"1.725\">6-7 days a week</option>\n              <option value=\"1.9\">Every day</option>\n            </select>\n          </div>\n        </div>\n\n        <button\n          onClick={calculateCalories}\n          className=\"w-full mt-6 bg-teal-600 hover:bg-teal-700 text-white font-semibold py-3 px-6 rounded-md\"\n        >\n          Calculate Calories\n        </button>\n\n        {calories && (\n          <div className=\"mt-6 text-xl font-semibold text-teal-700\">\n            {calories} Calories\n          </div>\n        )}\n      </div>\n\n      {/* BMI Calculator */}\n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-xl p-8\">\n        <h2 className=\"text-3xl font-bold text-center text-teal-600 mb-6\">BMI Calculator</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-semibold text-teal-700 mb-1\">Weight ({unit})</label>\n            <input\n              type=\"number\"\n              placeholder={`e.g. ${unit === \"lbs\" ? \"154\" : \"70\"}`}\n              value={weightBmi}\n              onChange={(e) => setWeightBmi(e.target.value)}\n              className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n            />\n          </div>\n\n          {heightUnit === \"ft-in\" ? (\n            <div>\n              <label className=\"block text-sm font-semibold text-teal-700 mb-1\">Height (ft & in)</label>\n              <div className=\"flex gap-4\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Feet\"\n                  value={heightBmiFeet}\n                  onChange={(e) => setHeightBmiFeet(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Inches\"\n                  value={heightBmiInches}\n                  onChange={(e) => setHeightBmiInches(e.target.value)}\n                  className=\"w-1/2 p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div>\n              <label className=\"block text-sm font-semibold text-teal-700 mb-1\">Height (cm)</label>\n              <input\n                type=\"number\"\n                placeholder=\"e.g. 175\"\n                value={heightBmiCm}\n                onChange={(e) => setHeightBmiCm(e.target.value)}\n                className=\"w-full p-3 border rounded-md dark:bg-gray-800 dark:border-gray-700\"\n              />\n            </div>\n          )}\n        </div>\n        <button\n          onClick={calculateBMI}\n          className=\"w-full mt-6 bg-teal-600 hover:bg-teal-700 text-white font-semibold py-3 px-6 rounded-md\"\n        >\n          Calculate BMI\n        </button>\n        {bmi && (\n          <div className=\"mt-6 text-xl font-semibold text-teal-700\">\n            Your BMI is {bmi}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Calories;\n"],"names":["Calories","user","isAuthenticated","useAuth0","isSettingsLoaded","setIsSettingsLoaded","useState","unit","setUnit","heightUnit","setHeightUnit","age","setAge","gender","setGender","weightCalories","setWeightCalories","heightFeet","setHeightFeet","heightInches","setHeightInches","heightCm","setHeightCm","activityLevel","setActivityLevel","calories","setCalories","weightBmi","setWeightBmi","bmi","setBmi","heightBmiFeet","setHeightBmiFeet","heightBmiInches","setHeightBmiInches","heightBmiCm","setHeightBmiCm","useEffect","async","docRef","doc","db","sub","docSnap","getDoc","exists","_data$unit","_data$heightUnit","data","loadSettings","handleUnitChange","newUnit","newHeightUnit","_jsxs","className","children","_jsx","type","value","onChange","e","target","placeholder","onClick","calculateCalories","w","parseFloat","a","parseInt","heightInCm","weightKg","maintenance","Math","round","calculateBMI","heightInMeters","toFixed"],"sourceRoot":""}