{"version":3,"file":"static/js/901.0c97e288.chunk.js","mappings":"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","sources":["components/Calories.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport db from \"../Firebase\";\nimport { doc, getDoc, setDoc,} from \"firebase/firestore\";\n\nconst Calories = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"male\");\n  const [height, setHeight] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [activityLevel, setActivityLevel] = useState(\"1.2\");\n  const [bmr, setBmr] = useState(null);\n  const [calories, setCalories] = useState(null);\n  const [bmi, setBmi] = useState(null);\n  const [units, setUnits] = useState(\"metric\");\n  const [isSettingsLoaded, setIsSettingsLoaded] = useState(false);\n\n  useEffect(() => {\n    const loadSettings = async () => {\n      try {\n        if (isAuthenticated && user?.sub) {\n          const docRef = doc(db, \"settings\", user.sub);\n          const docSnap = await getDoc(docRef);\n          if (docSnap.exists()) {\n            const data = docSnap.data();\n            if (data.units) {\n              setUnits(data.units);\n            }\n          }\n        } else {\n          const localSettings = localStorage.getItem(\"settings\");\n          if (localSettings) {\n            const parsedSettings = JSON.parse(localSettings);\n            if (parsedSettings.units) {\n              setUnits(parsedSettings.units);\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error loading settings:\", error);\n      } finally {\n        setIsSettingsLoaded(true);\n      }\n    };\n\n    loadSettings();\n  }, [isAuthenticated, user]);\n\n  const calculate = () => {\n    let h = parseFloat(height);\n    let w = parseFloat(weight);\n    let a = parseInt(age);\n\n    if (units === \"imperial\") {\n      h = h * 2.54; // inches to cm\n      w = w * 0.453592; // lbs to kg\n    }\n\n    if (gender === \"male\") {\n      setBmr(10 * w + 6.25 * h - 5 * a + 5);\n    } else {\n      setBmr(10 * w + 6.25 * h - 5 * a - 161);\n    }\n\n    const bmrValue = gender === \"male\"\n      ? 10 * w + 6.25 * h - 5 * a + 5\n      : 10 * w + 6.25 * h - 5 * a - 161;\n\n    const totalCalories = bmrValue * parseFloat(activityLevel);\n    setCalories(Math.round(totalCalories));\n\n    const heightInMeters = h / 100;\n    const bmiValue = w / (heightInMeters * heightInMeters);\n    setBmi(bmiValue.toFixed(1));\n  };\n\n  if (!isSettingsLoaded) {\n    return <div className=\"text-center mt-10 text-lg font-medium\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto mt-12 px-6\">\n      <h1 className=\"text-3xl font-bold mb-8 text-center text-teal-600\">Calorie & BMI Calculator</h1>\n      <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md space-y-4\">\n        <div className=\"flex flex-col md:flex-row gap-4\">\n          <div className=\"flex-1\">\n            <label className=\"block mb-1\">Age</label>\n            <input\n              type=\"number\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n              placeholder=\"e.g., 25\"\n            />\n          </div>\n          <div className=\"flex-1\">\n            <label className=\"block mb-1\">Gender</label>\n            <select\n              value={gender}\n              onChange={(e) => setGender(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col md:flex-row gap-4\">\n          <div className=\"flex-1\">\n            <label className=\"block mb-1\">Height ({units === \"metric\" ? \"cm\" : \"inches\"})</label>\n            <input\n              type=\"number\"\n              value={height}\n              onChange={(e) => setHeight(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n              placeholder={`e.g., ${units === \"metric\" ? \"170\" : \"67\"}`}\n            />\n          </div>\n          <div className=\"flex-1\">\n            <label className=\"block mb-1\">Weight ({units === \"metric\" ? \"kg\" : \"lbs\"})</label>\n            <input\n              type=\"number\"\n              value={weight}\n              onChange={(e) => setWeight(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n              placeholder={`e.g., ${units === \"metric\" ? \"65\" : \"143\"}`}\n            />\n          </div>\n        </div>\n\n        <div>\n          <label className=\"block mb-1\">Activity Level</label>\n          <select\n            value={activityLevel}\n            onChange={(e) => setActivityLevel(e.target.value)}\n            className=\"w-full p-2 border border-gray-300 rounded-md\"\n          >\n            <option value=\"1.2\">Sedentary (little or no exercise)</option>\n            <option value=\"1.375\">Lightly active (light exercise/sports 1-3 days/week)</option>\n            <option value=\"1.55\">Moderately active (moderate exercise/sports 3-5 days/week)</option>\n            <option value=\"1.725\">Very active (hard exercise/sports 6-7 days a week)</option>\n            <option value=\"1.9\">Extra active (very hard exercise/sports & physical job)</option>\n          </select>\n        </div>\n\n        <button\n          onClick={calculate}\n          className=\"mt-4 bg-teal-600 hover:bg-teal-700 text-white font-semibold py-3 px-6 rounded-md\"\n        >\n          Calculate\n        </button>\n\n        {bmr && (\n          <div className=\"mt-6 text-lg font-medium text-gray-700 dark:text-gray-100\">\n            <p>BMR: {Math.round(bmr)} kcal/day</p>\n            <p>Maintenance Calories: {calories} kcal/day</p>\n          </div>\n        )}\n\n        {bmi && (\n          <div className=\"mt-4 text-lg font-medium text-teal-700 dark:text-teal-300\">\n            BMI: {bmi}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Calories;\n"],"names":["Calories","user","isAuthenticated","useAuth0","age","setAge","useState","gender","setGender","height","setHeight","weight","setWeight","activityLevel","setActivityLevel","bmr","setBmr","calories","setCalories","bmi","setBmi","units","setUnits","isSettingsLoaded","setIsSettingsLoaded","useEffect","async","sub","docRef","doc","db","docSnap","getDoc","exists","data","localSettings","localStorage","getItem","parsedSettings","JSON","parse","error","console","loadSettings","_jsxs","className","children","_jsx","type","value","onChange","e","target","placeholder","onClick","calculate","h","parseFloat","w","a","parseInt","totalCalories","Math","round","heightInMeters","toFixed"],"sourceRoot":""}