{"version":3,"file":"static/js/664.1362642b.chunk.js","mappings":"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","sources":["components/PersonalRecord.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  collection,\n  addDoc,\n  query,\n  where,\n  getDocs,\n  orderBy,\n  deleteDoc,\n  doc\n} from \"firebase/firestore\";\nimport db from \"../Firebase\";\n\nfunction PersonalRecord() {\n  const { user, isAuthenticated } = useAuth0();\n  const [exercise, setExercise] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      loadRecordsFromFirestore();\n    } else {\n      const savedRecords = localStorage.getItem(\"personalRecords\");\n      if (savedRecords) {\n        setRecords(JSON.parse(savedRecords));\n      }\n    }\n  }, [isAuthenticated, user]);\n\n  const loadRecordsFromFirestore = async () => {\n    const recordsRef = collection(db, \"personal_records\");\n    const q = query(recordsRef, where(\"userId\", \"==\", user.sub), orderBy(\"timestamp\", \"desc\"));\n    const querySnapshot = await getDocs(q);\n\n    const fetchedRecords = [];\n    querySnapshot.forEach((doc) => {\n      fetchedRecords.push({ id: doc.id, ...doc.data() });\n    });\n\n    setRecords(fetchedRecords);\n  };\n\n  const saveRecord = async () => {\n    const newRecord = {\n      exercise,\n      weight,\n      reps,\n      timestamp: new Date()\n    };\n\n    if (isAuthenticated && user) {\n      try {\n        const docRef = await addDoc(collection(db, \"personal_records\"), {\n          ...newRecord,\n          userId: user.sub\n        });\n\n        setRecords((prev) => [\n          { id: docRef.id, ...newRecord },\n          ...prev\n        ]);\n      } catch (error) {\n        console.error(\"Error saving record:\", error);\n        alert(\"Error saving record.\");\n      }\n    } else {\n      const localRecords = [{ id: Date.now(), ...newRecord }, ...records];\n      setRecords(localRecords);\n      localStorage.setItem(\"personalRecords\", JSON.stringify(localRecords));\n    }\n\n    setExercise(\"\");\n    setWeight(\"\");\n    setReps(\"\");\n  };\n\n  const clearAllRecords = async () => {\n    const confirmClear = window.confirm(\"Are you sure you want to delete all personal records?\");\n    if (!confirmClear) return;\n\n    if (isAuthenticated && user) {\n      try {\n        const q = query(collection(db, \"personal_records\"), where(\"userId\", \"==\", user.sub));\n        const querySnapshot = await getDocs(q);\n\n        const deletePromises = querySnapshot.docs.map((recordDoc) => deleteDoc(doc(db, \"personal_records\", recordDoc.id)));\n        await Promise.all(deletePromises);\n\n        setRecords([]);\n      } catch (error) {\n        console.error(\"Error deleting records:\", error);\n        alert(\"Error deleting records.\");\n      }\n    } else {\n      localStorage.removeItem(\"personalRecords\");\n      setRecords([]);\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md mt-8 space-y-6\">\n      <h2 className=\"text-2xl font-bold text-teal-600\">Personal Record</h2>\n\n      <div className=\"space-y-4\">\n        \n      <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 rounded-xl shadow-lg p-6 transition-all\">\n        {!isAuthenticated && (\n          <div className=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4 rounded-md\">\n            <p className=\"font-semibold\">You are not logged in.</p>\n            <p className=\"text-sm\">\n              Your workouts will be saved locally but not to the cloud.\n            </p>\n          </div>\n        )}\n          <label className=\"text-teal-700 block mb-1\">Exercise</label>\n          <input\n            type=\"text\"\n            value={exercise}\n            onChange={(e) => {\n              const input = e.target.value;\n              if (/^[a-zA-Z\\s]*$/.test(input)) {\n                setExercise(input);\n              }\n            }}\n            className=\"w-full border rounded p-2\"\n            placeholder=\"e.g., Bench Press\"\n          />\n        </div>\n\n        <div>\n          <label className=\"text-teal-700 block mb-1\">Weight (lbs or kg)</label>\n          <input\n            type=\"number\"\n            value={weight}\n            onChange={(e) => setWeight(e.target.value)}\n            className=\"w-full border rounded p-2\"\n            placeholder=\"e.g., 150\"\n          />\n        </div>\n\n        <div>\n          <label className=\"text-teal-700 block mb-1\">Reps</label>\n          <input\n            type=\"number\"\n            value={reps}\n            onChange={(e) => setReps(e.target.value)}\n            className=\"w-full border rounded p-2\"\n            placeholder=\"e.g., 12\"\n          />\n        </div>\n\n        <button\n          onClick={saveRecord}\n          className=\"w-full bg-teal-600 text-white p-2 rounded\"\n        >\n          Save Record\n        </button>\n      </div>\n\n      <div>\n        <div className=\"flex justify-between items-center\">\n          <h3 className=\"text-xl font-semibold text-teal-600\">Saved Records</h3>\n          {records.length > 0 && (\n            <button\n              onClick={clearAllRecords}\n              className=\"text-sm text-red-500 hover:underline\"\n            >\n              Clear All\n            </button>\n          )}\n        </div>\n\n        <div className=\"space-y-4 mt-4\">\n          {records.length > 0 ? (\n            records.map((record) => (\n              <div\n                key={record.id}\n                className=\"bg-gray-100 p-4 rounded-lg shadow-md\"\n              >\n                <div className=\"text-teal-700 font-semibold\">{record.exercise}</div>\n                <div className=\"text-teal-500\">\n                  Weight: {record.weight} | Reps: {record.reps}\n                </div>\n                <div className=\"text-sm text-gray-500\">\n                  {new Date(record.timestamp?.seconds ? record.timestamp.seconds * 1000 : record.timestamp).toLocaleString()}\n                </div>\n              </div>\n            ))\n          ) : (\n            <p>No records found</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PersonalRecord;\n"],"names":["user","isAuthenticated","useAuth0","exercise","setExercise","useState","weight","setWeight","reps","setReps","records","setRecords","useEffect","loadRecordsFromFirestore","savedRecords","localStorage","getItem","JSON","parse","async","recordsRef","collection","db","q","query","where","sub","orderBy","querySnapshot","getDocs","fetchedRecords","forEach","doc","push","id","data","_jsxs","className","children","_jsx","type","value","onChange","e","input","target","test","placeholder","onClick","newRecord","timestamp","Date","docRef","addDoc","userId","prev","error","console","alert","localRecords","now","setItem","stringify","length","window","confirm","deletePromises","docs","map","recordDoc","deleteDoc","Promise","all","removeItem","record","_record$timestamp","seconds","toLocaleString"],"sourceRoot":""}