{"version":3,"file":"static/js/435.43a9b213.chunk.js","mappings":"kLAyHA,QApHA,WACE,MAAM,KAAEA,EAAI,gBAAEC,IAAoBC,EAAAA,EAAAA,OAC3BC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,QAC1BG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,OACtCK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,CAC/CO,QAAS,GACTC,KAAM,KA4CR,OAzCAC,EAAAA,EAAAA,YAAU,KACR,GAAIb,GAAmBD,EAAM,CACNe,WACnB,MAAMC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,WAAYlB,EAAKmB,KAClCC,QAAgBC,EAAAA,EAAAA,IAAOL,GAC7B,GAAII,EAAQE,SAAU,CAAC,IAADC,EAAAC,EAAAC,EACpB,MAAMC,EAAON,EAAQM,OACrBtB,EAAyB,QAAdmB,EAACG,EAAKvB,gBAAQ,IAAAoB,GAAAA,GACzBhB,EAAiB,QAAViB,EAACE,EAAKpB,YAAI,IAAAkB,EAAAA,EAAI,OACrBf,EAA6B,QAAhBgB,EAACC,EAAKlB,kBAAU,IAAAiB,EAAAA,EAAI,KACnC,GAGFE,EACF,IACC,CAAC1B,EAAiBD,KA2BnB4B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qFAAoFC,SAAA,CAGhGpB,EAAaE,UACZmB,EAAAA,EAAAA,KAAA,OACEF,WACwB,YAAtBnB,EAAaG,KACT,eACA,cAHK,kCAIuBiB,SAEjCpB,EAAaE,WAIlBmB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAC,cAGjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,gBAAeC,SAAC,eACjCC,EAAAA,EAAAA,KAAA,SACElB,KAAK,WACLmB,QAAS7B,EACT8B,SAAUA,IAAM7B,GAAaD,SAKjCyB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,qBAC5CF,EAAAA,EAAAA,MAAA,UACEM,MAAO5B,EACP2B,SAAWE,GAAM5B,EAAQ4B,EAAEC,OAAOF,OAClCL,UAAU,4GAA2GC,SAAA,EAErHC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,MAAKJ,SAAC,kBACpBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,KAAIJ,SAAC,0BAKvBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,2BAC5CF,EAAAA,EAAAA,MAAA,UACEM,MAAO1B,EACPyB,SAAWE,GAAM1B,EAAc0B,EAAEC,OAAOF,OACxCL,UAAU,4GAA2GC,SAAA,EAErHC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,KAAIJ,SAAC,sBACnBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,QAAOJ,SAAC,qBAK1BC,EAAAA,EAAAA,KAAA,UACEM,QAhFetB,UACnB,IAAKf,EAAM,OAEX,MAAMsC,EAAe,CACnBnC,WACAG,OACAE,cAGF,UACQ+B,EAAAA,EAAAA,KAAOtB,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,WAAYlB,EAAKmB,KAAMmB,EAAc,CAAEE,OAAO,IACnE7B,EAAgB,CACdC,QAAS,+BACTC,KAAM,WAEV,CAAE,MAAO4B,GACPC,QAAQD,MAAM,yBAA0BA,GACxC9B,EAAgB,CACdC,QAAS,yBACTC,KAAM,SAEV,GA4DIgB,UAAU,4CAA2CC,SACtD,oBAKP,C","sources":["components/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport db from \"../Firebase\";\n\nfunction Settings() {\n  const { user, isAuthenticated } = useAuth0();\n  const [darkMode, setDarkMode] = useState(false);\n  const [unit, setUnit] = useState(\"lbs\");\n  const [heightUnit, setHeightUnit] = useState(\"cm\"); \n  const [notification, setNotification] = useState({\n    message: \"\",\n    type: \"\", \n  });\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      const loadSettings = async () => {\n        const docRef = doc(db, \"settings\", user.sub);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          setDarkMode(data.darkMode ?? false);\n          setUnit(data.unit ?? \"lbs\");\n          setHeightUnit(data.heightUnit ?? \"cm\"); \n        }\n      };\n\n      loadSettings();\n    }\n  }, [isAuthenticated, user]);\n\n  const saveSettings = async () => {\n    if (!user) return;\n\n    const settingsData = {\n      darkMode,\n      unit,\n      heightUnit, \n    };\n\n    try {\n      await setDoc(doc(db, \"settings\", user.sub), settingsData, { merge: true });\n      setNotification({\n        message: \"Settings saved successfully!\",\n        type: \"success\",\n      });\n    } catch (error) {\n      console.error(\"Error saving settings:\", error);\n      setNotification({\n        message: \"Error saving settings.\",\n        type: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md mt-8 space-y-6\">\n\n\n      {notification.message && (\n        <div\n          className={`${\n            notification.type === \"success\"\n              ? \"bg-green-500\"\n              : \"bg-red-500\"\n          } text-white p-4 rounded-lg mb-6`}\n        >\n          {notification.message}\n        </div>\n      )}\n\n      <h2 className=\"text-2xl font-bold text-teal-600\">Settings</h2>\n\n      {/* Dark Mode Toggle */}\n      <div className=\"flex items-center justify-between\">\n        <label className=\"text-teal-700\">Dark Mode</label>\n        <input\n          type=\"checkbox\"\n          checked={darkMode}\n          onChange={() => setDarkMode(!darkMode)}\n        />\n      </div>\n\n      {/* Units */}\n      <div>\n        <label className=\"text-teal-700 block mb-1\">Preferred Units</label>\n        <select\n          value={unit}\n          onChange={(e) => setUnit(e.target.value)}\n          className=\"w-full border rounded p-2 bg-white text-gray-900 dark:bg-gray-700 dark:text-gray-100 dark:border-gray-600\"\n          >\n          <option value=\"lbs\">Pounds (lbs)</option>\n          <option value=\"kg\">Kilograms (kg)</option>\n        </select>\n      </div>\n\n      {/* Height Unit */}\n      <div>\n        <label className=\"text-teal-700 block mb-1\">Preferred Height Unit</label>\n        <select\n          value={heightUnit}\n          onChange={(e) => setHeightUnit(e.target.value)}\n          className=\"w-full border rounded p-2 bg-white text-gray-900 dark:bg-gray-700 dark:text-gray-100 dark:border-gray-600\"\n          >\n          <option value=\"cm\">Centimeters (cm)</option>\n          <option value=\"ft-in\">Feet (ft)</option>\n        </select>\n      </div>\n\n      \n      <button\n        onClick={saveSettings}\n        className=\"w-full bg-teal-600 text-white p-2 rounded\"\n      >\n        Save Settings\n      </button>\n    </div>\n  );\n}\n\nexport default Settings;\n"],"names":["user","isAuthenticated","useAuth0","darkMode","setDarkMode","useState","unit","setUnit","heightUnit","setHeightUnit","notification","setNotification","message","type","useEffect","async","docRef","doc","db","sub","docSnap","getDoc","exists","_data$darkMode","_data$unit","_data$heightUnit","data","loadSettings","_jsxs","className","children","_jsx","checked","onChange","value","e","target","onClick","settingsData","setDoc","merge","error","console"],"sourceRoot":""}